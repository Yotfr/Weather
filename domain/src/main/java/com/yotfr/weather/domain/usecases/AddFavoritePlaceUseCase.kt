package com.yotfr.weather.domain.usecases

import com.yotfr.weather.domain.model.PlaceInfo
import com.yotfr.weather.domain.repository.PlacesRepository
import com.yotfr.weather.domain.repository.SettingsRepository
import com.yotfr.weather.domain.repository.WeatherRepository

/**
 * [AddFavoritePlaceUseCase] save information about the selected place to the database, and also
 * saves the information about the weather in this place
 */
class AddFavoritePlaceUseCase(
    private val placesRepository: PlacesRepository,
    private val weatherRepository: WeatherRepository,
    private val settingsRepository: SettingsRepository
) {
    suspend operator fun invoke(place: PlaceInfo) {
        /*
         Save information about place into the database table Place
         and get autogenerated id
         */
        val placeId = placesRepository.addFavoritePlace(
            place = place
        )
        // Get currently selected measuring units
        val measuringUnits = settingsRepository.getMeasuringUnitsValues()
        // Get weather data for this place and save it to the database table WeatherCache
        weatherRepository.createWeatherCacheForPlace(
            placeId = placeId,
            latitude = place.latitude,
            longitude = place.longitude,
            timeZone = place.timeZone,
            temperatureUnits = measuringUnits.temperatureUnit.stringName,
            windSpeedUnits = measuringUnits.windSpeedUnit.stringName
        )
    }
}